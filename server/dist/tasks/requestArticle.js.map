{"version":3,"sources":["../../src/tasks/requestArticle.js"],"names":["requestArticle","sourceArticle","source","resolve","reject","keywords","title","returnType","console","log","outletID","process","env","NEWS_API_KEY","err","response","body","logger","error","statusCode","JSON","parse","articles","filter","article","name","length"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA;AAAA,wFAAiB,kBAAgBC,aAAhB,EAA+BC,MAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0DACZ;AAAA,iHAAY,iBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,wDAFK,GAEM,wBAASJ,cAAcK,KAAvB,EAA8B,EAAEC,YAAY,KAAd,EAA9B,CAFN;;AAGXC,wDAAQC,GAAR,CAAYJ,QAAZ;AAHW;AAAA,uDAIU,2BAAYH,MAAZ,CAJV;;AAAA;AAIPQ,wDAJO;;AAKX,gHAA+CL,QAA/C,iBAAmEK,QAAnE,gBAAsFC,QAAQC,GAAR,CAAYC,YAAlG,EACI,UAASC,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,EAA8B;AAC1B,wDAAIF,GAAJ,EAAS;AACLG,0EAAOC,KAAP,CAAaJ,GAAb;AACAV,+DAAOU,GAAP;AACH;AACDN,4DAAQC,GAAR,CAAYM,QAAZ;AACAP,4DAAQC,GAAR,CAAYM,SAASI,UAArB;AACA,wDAAIJ,SAASI,UAAT,KAAwB,GAA5B,EAAiC;AAC7BH,+DAAOI,KAAKC,KAAL,CAAWL,IAAX,CAAP;AACA,4DAAIM,WAAWN,KAAKM,QAApB;AACA;AACAA,mEAAWA,SAASC,MAAT,CAAgB,UAASC,OAAT,EAAkB;AACzC,gEAAIA,QAAQtB,MAAR,CAAeuB,IAAf,KAAwBvB,MAAxB,IAAkC,6BAAcsB,QAAQlB,KAAtB,EAA6BL,cAAcK,KAA3C,KAAqD,GAA3F,EAAgG;AAC5F,uEAAOkB,OAAP;AACH;AACJ,yDAJU,CAAX;AAKA;AACA,4DAAIF,SAASI,MAAb,EAAqB;AACjBvB,oEAAQmB,QAAR;AACH,yDAFD,MAEO;AACHlB,mEAAO,oBAAP;AACH;AACJ;AACJ,iDAxBL;AALW;AAAA;;AAAA;AAAA;AAAA;;AAgCXA;;AAhCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAZ;;AAAA;AAAA;AAAA;AAAA,4BADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAsCeJ,c","file":"requestArticle.js","sourcesContent":["import request from 'request';\r\nimport tokenize from './../utils/tokenize';\r\nimport compareTokens from './../utils/compareTokens';\r\nimport getOutletID from './getOutletID';\r\nimport logger from '../config/winston';\r\n\r\nconst requestArticle = async function (sourceArticle, source) {\r\n    return new Promise(async(resolve, reject) => {\r\n        try {\r\n            const keywords = tokenize(sourceArticle.title, { returnType: \"url\" });\r\n            console.log(keywords)\r\n            let outletID = await getOutletID(source);\r\n            request(`https://newsapi.org/v2/everything?q=${keywords}&sources=${outletID}&apiKey=${process.env.NEWS_API_KEY}`,\r\n                function(err, response, body) {\r\n                    if (err) {\r\n                        logger.error(err)\r\n                        reject(err);\r\n                    }\r\n                    console.log(response)\r\n                    console.log(response.statusCode)\r\n                    if (response.statusCode === 200) {\r\n                        body = JSON.parse(body);\r\n                        let articles = body.articles;\r\n                        // Keep only those article whose source name is the same and title matches\r\n                        articles = articles.filter(function(article) {\r\n                            if (article.source.name === source && compareTokens(article.title, sourceArticle.title) >= 0.2) {\r\n                                return article;\r\n                            }\r\n                        });\r\n                        // Check if articles with specified conditions exist\r\n                        if (articles.length) {\r\n                            resolve(articles);\r\n                        } else {\r\n                            reject(\"No articles found!\");\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        } catch(err) {\r\n            reject(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport default requestArticle;"]}