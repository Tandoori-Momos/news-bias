{"version":3,"sources":["../../../src/routes/api/api.routes.js"],"names":["urlencodedParser","bodyParser","urlencoded","extended","router","express","Router","performanceObserver","PerformanceObserver","items","getEntries","forEach","item","duration","logger","warn","name","Math","round","info","observe","entryTypes","get","req","res","send","performance","mark","url","bias","title","then","newArticle","status","json","method","measure","catch","err","error","post"],"mappings":"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","file":"api.routes.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport getOutletBias from './../../tasks/getOutletBias';\nimport fetchArticle from './../../tasks/fetchArticle';\nimport { performance, PerformanceObserver } from 'perf_hooks';\nimport logger from './../../config/winston';    \n\nconst urlencodedParser = bodyParser.urlencoded({ extended: false });\n\nlet router = express.Router();\n\nconst performanceObserver = new PerformanceObserver((items) => {\n    items.getEntries().forEach((item) => {\n        if (item.duration > 75000) {\n            logger.warn(`[${item.name}]: ${item.duration}ms (Violation by ${Math.round((item.duration - 75000) * 100) / 100}ms)`);\n        } else {\n            logger.info(`[${item.name}]: ${item.duration}ms`);\n        }\n    })\n});\n\nperformanceObserver.observe({entryTypes: ['measure']});\n\nrouter.get('/', (req, res) => {\n    res.send('Hey!');\n});\n\nrouter.get('/0', async (req,res) => {\n    \n    // Begin performance test \n    performance.mark('Beginning sanity check');\n\n    const bias = await getOutletBias({\n        url: 'bbc'\n    });\n        \n    fetchArticle({\n        title: \"Donald Trump USA\"\n    }, 'left')\n        .then((newArticle) => {\n            res.status(200).json(newArticle);\n            logger.info(`Sent article data to ${ req.url } (METHOD: ${ req.method })`);\n           \n            // End performance test \n            performance.mark('Ending sanity test');\n\n            // Log performance details \n            performance.measure('API Sanity test', 'Beginning sanity test', 'Ending sanity test');\n\n        })\n        .catch((err) => {\n            res.status(404).json({\n                'status': 404,\n                'error': err                \n            })\n            logger.error(`${err} (404)`);\n        });\n\n});\n\nrouter.post('/0', urlencodedParser , async (req,res) => {    \n   // Begin performance test \n   performance.mark('Beginning sanity check');\n\n   const bias = await getOutletBias({\n       url: 'bbc'\n   });\n       \n   fetchArticle({\n       title: \"House takes major step towards impeachment\"\n   }, 'left')\n       .then((newArticle) => {\n           res.status(200).json(newArticle);\n           logger.info(`Sent article data to ${ req.url } (METHOD: ${ req.method })`);\n          \n           // End performance test \n           performance.mark('Ending sanity test');\n\n           // Log performance details \n           performance.measure('API Sanity test', 'Beginning sanity test', 'Ending sanity test');\n\n       })\n       .catch((err) => {\n           res.status(404).json({\n               'status': 404,\n               'error': err                \n           })\n           logger.error(`${err} (404)`);\n       });\n});\n\nexport default router;"]}