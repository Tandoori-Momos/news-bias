{"version":3,"sources":["../../src/utils/compareTokens.js"],"names":["keywordExists","array","token","count","i","length","undefined","compareTokens","sourceTitle","remoteTitle","counter","source_keywords","returnType","remote_keywords","longerArray","smallerArray"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACjC,QAAIC,QAAQ,CAAZ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,YAAI,kCAAoBH,MAAMG,CAAN,CAApB,EAA8BF,KAA9B,EAAqCI,SAArC,EAAgD,IAAhD,KAAyD,GAA7D,EAAkE;AAC9DH;AACH;AACJ;;AAED,QAAIA,KAAJ,EAAW;AACP,eAAO,CAAP;AACH,KAFD,MAEO;AACH,eAAO,CAAP;AACH;AACJ;;AAED,IAAMI,gBAAgB,SAAhBA,aAAgB,CAASC,WAAT,EAAsBC,WAAtB,EAAmC;AACrD,QAAIC,UAAU,CAAd;AACA,QAAIC,kBAAkB,wBAASH,WAAT,EAAsB,EAAEI,YAAY,OAAd,EAAtB,CAAtB;AACA,QAAIC,kBAAkB,wBAASJ,WAAT,EAAsB,EAAEG,YAAY,OAAd,EAAtB,CAAtB;AACA,QAAIE,oBAAJ;AAAA,QAAiBC,qBAAjB;;AAEA,QAAIJ,gBAAgBN,MAAhB,IAA0BQ,gBAAgBR,MAA9C,EAAsD;AAClDS,sBAAcH,eAAd;AACAI,uBAAeF,eAAf;AACH,KAHD,MAGO;AACHC,sBAAcD,eAAd;AACAE,uBAAeJ,eAAf;AACH;;AAED,SAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIU,YAAYT,MAAhC,EAAwCD,GAAxC,EAA6C;AACzC,YAAIJ,cAAce,YAAd,EAA4BD,YAAYV,CAAZ,CAA5B,CAAJ,EAAiD;AAC7CM;AACH;AACJ;;AAED,SAAK,IAAIN,KAAI,CAAb,EAAgBA,KAAIW,aAAaV,MAAjC,EAAyCD,IAAzC,EAA8C;AAC1C,YAAIJ,cAAcc,WAAd,EAA2BC,aAAaX,EAAb,CAA3B,CAAJ,EAAiD;AAC7CM;AACH;AACJ;;AAED,WAAOA,WAASI,YAAYT,MAAZ,GAAqBU,aAAaV,MAA3C,CAAP;AAEH,CA5BD;;kBA8BeE,a","file":"compareTokens.js","sourcesContent":["import tokenize from './tokenize';\nimport { JaroWinklerDistance } from 'natural';\n\nfunction keywordExists(array, token) {\n    let count = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (JaroWinklerDistance(array[i], token, undefined, true) >= 0.8) {\n            count++;\n        }\n    }\n    \n    if (count) { \n        return 1; \n    } else {\n        return 0;\n    }\n}\n\nconst compareTokens = function(sourceTitle, remoteTitle) {\n    let counter = 0; \n    let source_keywords = tokenize(sourceTitle, { returnType: \"array\" });\n    let remote_keywords = tokenize(remoteTitle, { returnType: \"array\" });\n    let longerArray, smallerArray;\n\n    if (source_keywords.length >= remote_keywords.length) {\n        longerArray = source_keywords; \n        smallerArray = remote_keywords;\n    } else {\n        longerArray = remote_keywords;\n        smallerArray = source_keywords;\n    }\n    \n    for (let i = 0; i < longerArray.length; i++) {\n        if (keywordExists(smallerArray, longerArray[i])) {\n            counter++;\n        }\n    }\n\n    for (let i = 0; i < smallerArray.length; i++) {\n        if (keywordExists(longerArray, smallerArray[i])) {\n            counter++;\n        }\n    }\n\n    return counter/(longerArray.length + smallerArray.length);\n\n}\n\nexport default compareTokens;\n\n\n\n"]}