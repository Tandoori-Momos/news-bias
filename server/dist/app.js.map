{"version":3,"sources":["../src/app.js"],"names":["app","use","express","static","path","join","__dirname","set","mongoose","connect","useNewUrlParser","then","logger","info","catch","err","error","req","res","next","method","url","apiRoutes","altPort","process","argv","server","listen","env","PORT","address","port","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAN,IAAIO,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAP,IAAIO,GAAJ,CAAQ,OAAR,EAAiBH,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;;AAEA;AACAE,mBAASC,OAAT,CAAiB,2DAAjB,EAA8E;AAC1EC,qBAAiB;AADyD,CAA9E,EAGCC,IAHD,CAGM,YAAM;AACRC,sBAAOC,IAAP,CAAY,0BAAZ;AACH,CALD,EAMCC,KAND,CAMO,UAACC,GAAD,EAAS;AACZH,sBAAOI,KAAP,CAAaD,GAAb;AACH,CARD;;AAUA;AACAf,IAAIC,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBP,sBAAOC,IAAP,eAAwBI,IAAIG,MAA5B,qBAAkDH,IAAII,GAAtD;AACAF;AACH,CAHD;;AAKA;AACAnB,IAAIC,GAAJ,CAAQ,OAAR,EAAiBqB,mBAAjB;;AAEA;AACA,IAAMC,UAAWC,QAAQC,IAAR,CAAa,CAAb,CAAD,GAAoBD,QAAQC,IAAR,CAAa,CAAb,CAApB,GAAsC,IAAtD;;AAEA,IAAMC,SAAS1B,IAAI2B,MAAJ,CAAWH,QAAQI,GAAR,CAAYC,IAAZ,IAAoBN,OAA/B,EAAwC,YAAM;AACzDX,sBAAOC,IAAP,wBAAiCa,OAAOI,OAAP,GAAiBC,IAAlD;AACH,CAFc,CAAf;;AAIAC,OAAOC,OAAP,GAAiBjC,GAAjB,C,CAAsB","file":"app.js","sourcesContent":["import express from 'express';\nimport ejs from 'ejs';\nimport logger from './config/winston';\nimport apiRoutes from './routes/api/api.routes.js';\nimport mongoose  from 'mongoose';\nimport path from 'path';\n\nconst app = express();\n\napp.use(express.static(path.join(__dirname, 'public')));\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname, 'views'));\n\n// Connect to mongoose db\nmongoose.connect('mongodb://admin:admin12@ds243897.mlab.com:43897/news-bias', {\n    useNewUrlParser: true\n})\n.then(() => {\n    logger.info('Connected to Mongoose DB');\n})\n.catch((err) => {\n    logger.error(err);\n});\n\n// Primary routes \napp.use((req, res, next) => {\n    logger.info(`Incoming ${req.method} request to: ${req.url}`);\n    next();\n});\n\n// Mount the v1 api routes\napp.use('/api/', apiRoutes);\n\n// Allows to set alternative port during launch\nconst altPort = (process.argv[2]) ? process.argv[2] : 8080;\n\nconst server = app.listen(process.env.PORT || altPort, () => {\n    logger.info(`Listening to port ${server.address().port}`);\n});\n\nmodule.exports = app; // For testing purposes"]}